clear all
set more off
********************************************************************************
* Abre uma pasta no PC, coloca "ftp://ftp.mtps.gov.br/pdet/microdados/" e daí  *
* vai em "RAIS", "2023" e extrai "RAIS_VINC_PUB_SUL". Daí só modificar o cami- *
* no cd:                                                                       *
*ACABEI DE VER QUE AGORA TEM A RAIS 2024. HÁ UNS DIAS NÃO TINHA. VOU TER QUE ATUALIZAR OS DADOS
********************************************************************************
cd "C:/Users/Miguel/Desktop/Trabalho do Tillmann/"
import delimited "D:/RAIS_VINC_PUB_SUL_2023.txt", delimiter(";") varnames(1) clear
keep causaafastamento1 causaafastamento2 causaafastamento3 cboocupação2002   ///
     cnae20subclasse idade indceivinculado indportadordefic                  ///
     indtrabintermitente indtrabparcial indsimples motivodesligamento        ///
     município nacionalidade naturezajurídica raçacor escolaridadeapós2005   ///
     qtddiasafastamento qtdhoracontr sexotrabalhador tamanhoestabelecimento  ///
     tempoemprego tipoadmissão tipoestab tipodefic tipovínculo v43           ///
	 vlremunmédianom vlremunmédiasm vínculoativo3112 

/***************************************************************************
* (1) CNAE
***************************************************************************/
gen cnae_agrup = .
*================================= CNAE.A =================================*
replace cnae_agrup = 0 if inlist(cnae20subclasse, ///
0111301,0111302,0111303,0111399,0112101,0112102,0112199,0113000,0114800, ///
0115600,0116401,0116402,0116403,0116499,0119901,0119902,0119903,0119904, ///
0119905,0119906,0119907,0119908,0119909,0119999,0121101,0121102,0122900, ///
0131800,0132600,0133401,0133402,0133403,0133404,0133405,0133406,0133407, ///
0133408,0133409,0133410,0133411,0133499,0134200,0135100,0139301,0139302, ///
0139303,0139304,0139305,0139306,0139399,0141501,0141502,0142300,0151201, ///
0151202,0151203,0152101,0152102,0152103,0153901,0153902,0154700,0155501, ///
0155502,0155503,0155504,0155505,0159801,0159802,0159803,0159804,0159899, ///
0161001,0161002,0161003,0161099,0162801,0162802,0162803,0162899,0163600, ///
0170900,0210101,0210102,0210103,0210104,0210105,0210106,0210107,0210108, ///
0210109,0210199,0220901,0220902,0220903,0220904,0220905,0220906,0220999, ///
0230600,0311601,0311602,0311603,0311604,0312401,0312402,0312403,0312404, ///
0321301,0321302,0321303,0321304,0321305,0321399,0322101,0322102,0322103, ///
0322104,0322105,0322106,0322107,0322199)
*================================= CNAE.B =================================*
replace cnae_agrup = 1 if inlist(cnae20subclasse, ///
0500301,0500302,0600001,0600002,0600003,0710301,0710302,0721901,0721902, ///
0722701,0722702,0723501,0723502,0724301,0724302,0725100,0729401,0729402, ///
0729403,0729404,0729405,0810001,0810002,0810003,0810004,0810005,0810006, ///
0810007,0810008,0810009,0810010,0810099,0891600,0892401,0892402,0892403, ///
0893200,0899101,0899102,0899103,0899199,0910600,0990401,0990402,0990403)
*================================= CNAE.C =================================*
replace cnae_agrup = 2 if inlist(cnae20subclasse, ///
1011201,1011202,1011203,1011204,1011205,1012101,1012102,1012103,1012104, ///
1013901,1013902,1020101,1020102,1031700,1032501,1032599,1033301,1033302, ///
1041400,1042200,1043100,1051100,1052000,1053800,1061901,1061902,1062700, ///
1063500,1064300,1065101,1065102,1065103,1066000,1069400,1071600,1072401, ///
1072402,1081301,1081302,1082100,1091100,1091101,1091102,1092900,1093701, ///
1093702,1094500,1095300,1096100,1099601,1099602,1099603,1099604,1099605, ///
1099606,1099607,1099699,1111901,1111902,1112700,1113501,1113502,1121600, ///
1122401,1122402,1122403,1122404,1122499,1210700,1220401,1220402,1220403, ///
1220499,1311100,1312000,1313800,1314600,1321900,1322700,1323500,1330800, ///
1340501,1340502,1340599,1351100,1352900,1353700,1354500,1359600,1411801, ///
1411802,1412601,1412602,1412603,1413401,1413402,1413403,1414200,1421500, ///
1422300,1510600,1521100,1529700,1531901,1531902,1532700,1533500,1539400, ///
1540800,1610201,1610202,1610203,1610204,1610205,1621800,1622601,1622602, ///
1622699,1623400,1629301,1629302,1710900,1721400,1722200,1731100,1732000, ///
1733800,1741901,1741902,1742701,1742702,1742799,1749400,1811301,1811302, ///
1812100,1813001,1813099,1821100,1822900,1822901,1822999,1830001,1830002, ///
1830003,1910100,1921700,1922501,1922502,1922599,1931400,1932200,2011800, ///
2012600,2013400,2013401,2013402,2014200,2019301,2019399,2021500,2022300, ///
2029100,2031200,2032100,2033900,2040100,2051700,2052500,2061400,2062200, ///
2063100,2071100,2072000,2073800,2091600,2092401,2092402,2092403,2093200, ///
2094100,2099101,2099199,2110600,2121101,2121102,2121103,2122000,2123800, ///
2211100,2212900,2219600,2221800,2222600,2223400,2229301,2229302,2229303, ///
2229399,2311700,2312500,2319200,2320600,2330301,2330302,2330303,2330304, ///
2330305,2330399,2341900,2342701,2342702,2349401,2349499,2391501,2391502, ///
2391503,2392300,2399101,2399102,2399199,2411300,2412100,2421100,2422901, ///
2422902,2423701,2423702,2424501,2424502,2431800,2439300,2441501,2441502, ///
2442300,2443100,2449101,2449102,2449103,2449199,2451200,2452100,2511000, ///
2512800,2513600,2521700,2522500,2531401,2531402)
replace cnae_agrup = 2 if inlist(cnae20subclasse, ///
2532201,2532202,2539000,2539001,2539002,2541100,2542000,2543800,2550101, ///
2550102,2591800,2592601,2592602,2593400,2599301,2599302,2599399,2610800, ///
2621300,2622100,2631100,2632900,2640000,2651500,2652300,2660400,2670101, ///
2670102,2680900,2710401,2710402,2710403,2721000,2722801,2722802,2731700, ///
2732500,2733300,2740601,2740602,2751100,2759701,2759799,2790201,2790202, ///
2790299,2811900,2812700,2813500,2814301,2814302,2815101,2815102,2821601, ///
2821602,2822401,2822402,2823200,2824101,2824102,2825900,2829101,2829199, ///
2831300,2832100,2833000,2840200,2851800,2852600,2853400,2854200,2861500, ///
2862300,2863100,2864000,2865800,2866600,2869100,2910701,2910702,2910703, ///
2920401,2920402,2930101,2930102,2930103,2941700,2942500,2943300,2944100, ///
2945000,2949201,2949299,2950600,3011301,3011302,3012100,3031800,3032600, ///
3041500,3042300,3050400,3091100,3091101,3091102,3092000,3099700,3101200, ///
3102100,3103900,3104700,3211601,3211602,3211603,3212400,3220500,3230200, ///
3240001,3240002,3240003,3240099,3250701,3250702,3250703,3250704,3250705, ///
3250706,3250707,3250708,3250709,3291400,3292201,3292202,3299001,3299002, ///
3299003,3299004,3299005,3299006,3299099,3311200,3312102,3312103,3312104, ///
3313901,3313902,3313999,3314701,3314702,3314703,3314704,3314705,3314706, ///
3314707,3314708,3314709,3314710,3314711,3314712,3314713,3314714,3314715, ///
3314716,3314717,3314718,3314719,3314720,3314721,3314722,3314799,3315500, ///
3316301,3316302,3317101,3317102,3319800,3321000,3329501,3329599)
*================================= CNAE.D =================================*
replace cnae_agrup = 3 if inlist(cnae20subclasse, ///
3511500,3511501,3511502,3512300,3513100,3514000,3520401,3520402,3530100)
*================================= CNAE.E =================================*
replace cnae_agrup = 4 if inlist(cnae20subclasse, ///
3600601,3600602,3701100,3702900,3811400,3812200,3821100,3822000,3831901, ///
3831999,3832700,3839401,3839499,3900500)
*================================= CNAE.F =================================*
replace cnae_agrup = 5 if inlist(cnae20subclasse, ///
4110700,4120400,4211101,4211102,4212000,4213800,4221901,4221902,4221903, ///
4221904,4221905,4222701,4222702,4223500,4291000,4292801,4292802,4299501, ///
4299599,4311801,4311802,4312600,4313400,4319300,4321500,4322301,4322302, ///
4322303,4329101,4329102,4329103,4329104,4329105,4329199,4330401,4330402, ///
4330403,4330404,4330405,4330499,4391600,4399101,4399102,4399103,4399104, ///
4399105,4399199)
*================================= CNAE.G =================================*
replace cnae_agrup = 6 if inlist(cnae20subclasse, ///
4511101,4511102,4511103,4511104,4511105,4511106,4512901,4512902,4520001, ///
4520002,4520003,4520004,4520005,4520006,4520007,4520008,4530701,4530702, ///
4530703,4530704,4530705,4530706,4541201,4541202,4541203,4541204,4541205, ///
4541206,4541207,4542101,4542102,4543900,4611700,4612500,4613300,4614100, ///
4615000,4616800,4617600,4618401,4618402,4618403,4618499,4619200,4621400, ///
4622200,4623101,4623102,4623103,4623104,4623105,4623106,4623107,4623108, ///
4623109,4623199,4631100,4632001,4632002,4632003,4633801,4633802,4633803, ///
4634601,4634602,4634603,4634699,4635401,4635402,4635403,4635499,4636201, ///
4636202,4637101,4637102,4637103,4637104,4637105,4637106,4637107,4637199, ///
4639701,4639702,4641901,4641902,4641903,4642701,4642702,4643501,4643502, ///
4644301,4644302,4645101,4645102,4645103,4646001,4646002,4647801,4647802, ///
4649401,4649402,4649403,4649404,4649405,4649406,4649407,4649408,4649409, ///
4649410,4649499,4651601,4651602,4652400,4661300,4662100,4663000,4664800, ///
4665600,4669901,4669999,4671100,4672900,4673700,4674500,4679601,4679602, ///
4679603,4679604,4679699,4681801,4681802,4681803,4681804,4681805,4682600, ///
4683400,4684201,4684202,4684299,4685100,4686901,4686902,4687701,4687702, ///
4687703,4689301,4689302,4689399,4691500,4692300,4693100,4711301,4711302, ///
4712100,4713001,4713002,4713003,4713004,4713005,4721101,4721102,4721103, ///
4721104,4722901,4722902,4723700,4724500,4729601,4729602,4729699,4731800, ///
4732600,4741500,4742300,4743100,4744001,4744002,4744003,4744004,4744005, ///
4744006,4744099,4751200,4751201,4751202,4752100,4753900,4754701,4754702, ///
4754703,4755501,4755502,4755503,4756300,4757100,4759801,4759899,4761001, ///
4761002,4761003,4762800,4763601,4763602,4763603,4763604,4763605,4771701, ///
4771702,4771703,4771704,4772500,4773300,4774100,4781400,4782201,4782202, ///
4783101,4783102,4784900,4785701,4785799,4789001,4789002,4789003,4789004, ///
4789005,4789006,4789007,4789008,4789009,4789099)
*================================= CNAE.H =================================*
replace cnae_agrup = 7 if inlist(cnae20subclasse, ///
4911600,4912401,4912402,4912403,4921301,4921302,4922101,4922102,4922103, ///
4923001,4923002,4924800,4929901,4929902,4929903,4929904,4929999,4930201, ///
4930202,4930203,4930204,4940000,4950700,5011401,5011402,5012201,5012202, ///
5021101,5021102,5022001,5022002,5030101,5030102,5030103,5091201,5091202, ///
5099801,5099899,5111100,5112901,5112999,5120000,5130700,5211701,5211702, ///
5211799,5212500,5221400,5222200,5223100,5229001,5229002,5229099,5231101, ///
5231102,5231103,5232000,5239700,5239701,5239799,5240101,5240199,5250801, ///
5250802,5250803,5250804,5250805,5310501,5310502,5320201,5320202)
*================================= CNAE.I =================================*
replace cnae_agrup = 8 if inlist(cnae20subclasse, ///
5510801,5510802,5510803,5590601,5590602,5590603,5590699,5611201,5611202, ///
5611203,5611204,5611205,5612100,5620101,5620102,5620103,5620104)
*================================= CNAE.J =================================*
replace cnae_agrup = 9 if inlist(cnae20subclasse, ///
5811500,5812300,5812301,5812302,5813100,5819100,5821200,5822100,5822101, ///
5822102,5823900,5829800,5911101,5911102,5911199,5912001,5912002,5912099, ///
5913800,5914600,5920100,6010100,6021700,6022501,6022502,6110801,6110802, ///
6110803,6110899,6120501,6120502,6120599,6130200,6141800,6142600,6143400, ///
6190601,6190602,6190699,6201500,6201501,6201502,6202300,6203100,6204000, ///
6209100,6311900,6319400,6391700,6399200)
*================================= CNAE.K =================================*
replace cnae_agrup = 10 if inlist(cnae20subclasse, ///
6410700,6421200,6422100,6423900,6424701,6424702,6424703,6424704,6431000, ///
6432800,6433600,6434400,6435201,6435202,6435203,6436100,6437900,6438701, ///
6438799,6440900,6450600,6461100,6462000,6463800,6470101,6470102,6470103, ///
6491300,6492100,6493000,6499901,6499902,6499903,6499904,6499905,6499999, ///
6511101,6511102,6512000,6520100,6530800,6541300,6542100,6550200,6611801, ///
6611802,6611803,6611804,6612601,6612602,6612603,6612604,6612605,6613400, ///
6619301,6619302,6619303,6619304,6619305,6619399,6621501,6621502,6622300, ///
6629100,6630400)
*================================= CNAE.L =================================*
replace cnae_agrup = 11 if inlist(cnae20subclasse, ///
6810201,6810202,6810203,6821801,6821802,6822600)
*================================= CNAE.M =================================*
replace cnae_agrup = 12 if inlist(cnae20subclasse, ///
6911701,6911702,6911703,6912500,6920601,6920602,7020400,7111100,7112000, ///
7119701,7119702,7119703,7119704,7119799,7120100,7210000,7220700,7311400, ///
7312200,7319001,7319002,7319003,7319004,7319099,7320300,7410201,7410202, ///
7410203,7410299,7420001,7420002,7420003,7420004,7420005,7490101,7490102, ///
7490103,7490104,7490105,7490199)
*================================= CNAE.N =================================*
replace cnae_agrup = 13 if inlist(cnae20subclasse, ///
7500100,7711000,7719501,7719502,7719599,7721700,7722500,7723300,7729201, ///
7729202,7729203,7729299,7731400,7732201,7732202,7733100,7739001,7739002, ///
7739003,7739099,7740300,7810800,7820500,7830200,7911200,7912100,7990200)
*================================= CNAE.O =================================*
replace cnae_agrup = 14 if inlist(cnae20subclasse, ///
8011101,8011102,8012900,8020000,8020001,8020002,8030700,8111700,8112500, ///
8121400,8122200,8129000,8130300,8211300,8219901,8219999,8220200,8230001, ///
8230002,8291100,8292000,8299701,8299702,8299703,8299704,8299705,8299706, ///
8299707,8299799,8411600,8412400,8413200,8421300,8422100,8423000,8424800, ///
8425600,8430200)
*================================= CNAE.P =================================*
replace cnae_agrup = 15 if inlist(cnae20subclasse, ///
8511200,8512100,8513900,8520100,8531700,8532500,8533300,8541400,8542200, ///
8550301,8550302,8591100,8592901,8592902,8592903,8592999,8593700,8599601, ///
8599602,8599603,8599604,8599605,8599699)
*================================= CNAE.Q =================================*
replace cnae_agrup = 16 if inlist(cnae20subclasse, ///
8610101,8610102,8621601,8621602,8622400,8630501,8630502,8630503,8630504, ///
8630506,8630507,8630599,8640201,8640202,8640203,8640204,8640205,8640206, ///
8640207,8640208,8640209,8640210,8640211,8640212,8640213,8640214,8640299, ///
8650001,8650002,8650003,8650004,8650005,8650006,8650007,8650099,8660700, ///
8690901,8690902,8690903,8690904,8690999,8711501,8711502,8711503,8711504, ///
8711505,8712300,8720401,8720499,8730101,8730102,8730199,8800600)
*================================= CNAE.R =================================*
replace cnae_agrup = 17 if inlist(cnae20subclasse, ///
9001901,9001902,9001903,9001904,9001905,9001906,9001999,9002701,9002702, ///
9003500,9101500,9102301,9102302,9103100,9200301,9200302,9200399,9311500, ///
9312300,9313100,9319101,9319199,9321200,9329801,9329802,9329803,9329804, ///
9329899)
*================================= CNAE.S =================================*
replace cnae_agrup = 18 if inlist(cnae20subclasse, ///
9411100,9412000,9412001,9412099,9420100,9430800,9491000,9492800,9493600, ///
9499500,9511800,9512600,9521500,9529101,9529102,9529103,9529104,9529105, ///
9529106,9529199,9601701,9601702,9601703,9602501,9602502,9603301,9603302, ///
9603303,9603304,9603305,9603399,9609201,9609202,9609203,9609204,9609205, ///
9609206,9609207,9609208,9609299)
*================================= CNAE.T =================================*
replace cnae_agrup = 19 if inlist(cnae20subclasse, ///
9700500)
*================================= CNAE.U =================================*
replace cnae_agrup = 20 if inlist(cnae20subclasse, ///
9900800)
*==========================================================================*
label define cnae_agrup_lbl 0 "A"
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 1 "B", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 2 "C", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 3 "D", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 4 "E", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 5 "F", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 6 "G", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 7 "H", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 8 "I", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 9 "J", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 10 "K", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 11 "L", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 12 "M", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 13 "N", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 14 "O", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 15 "P", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 16 "Q", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 17 "R", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 18 "S", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 19 "T", add
label values cnae_agrup cnae_agrup_lbl
label define cnae_agrup_lbl 20 "U", add
label values cnae_agrup cnae_agrup_lbl
drop cnae20subclasse
gen cnae_agrupado = .
replace cnae_agrupado = 0 if inlist(cnae_agrup,0)
replace cnae_agrupado = 1 if inlist(cnae_agrup,1,2,3,4)
replace cnae_agrupado = 2 if inlist(cnae_agrup,5)
replace cnae_agrupado = 3 if inlist(cnae_agrup,6)
replace cnae_agrupado = 4 if inlist(cnae_agrup,7)
replace cnae_agrupado = 5 if inlist(cnae_agrup,8)
replace cnae_agrupado = 6 if inlist(cnae_agrup,9,10,11,12,13)
replace cnae_agrupado = 7 if inlist(cnae_agrup,14,15,16)
replace cnae_agrupado = 8 if inlist(cnae_agrup,17,18,20)
replace cnae_agrupado = 9 if inlist(cnae_agrup,19)
label define cnae_agrupado_lbl 0 "A", add
label define cnae_agrupado_lbl 1 "B,C,D,E", add
label define cnae_agrupado_lbl 2 "F", add
label define cnae_agrupado_lbl 3 "G", add
label define cnae_agrupado_lbl 4 "H", add
label define cnae_agrupado_lbl 5 "I", add
label define cnae_agrupado_lbl 6 "J,K,L,M,N", add
label define cnae_agrupado_lbl 7 "O,P,Q", add
label define cnae_agrupado_lbl 8 "R,S,U", add
label define cnae_agrupado_lbl 9 "T", add
label values cnae_agrupado cnae_agrupado_lbl
* Dropando Agricultura, Pecuária, Produção Florestal, Pesca e Aquicultura
drop if cnae_agrup == 0
* Dropando Administração Pública, Defesa e Seguridade Social
drop if cnae_agrup == 14
* Dropando Artes, Cultura, Esporte e Recreação
*drop if cnae_agrup == 17
* Dropando Outras Atividades de Serviços
*drop if cnae_agrup == 18
* Dropando Serviços Domésticos para evitar predição perfeita
drop if cnae_agrup == 19
* Dropando Organismos Internacionais e Outras Instituições Extraterritoriais
drop if cnae_agrup == 20
*==========================================================================*

/*************************************************************************
* (2) CBO
*************************************************************************/
*================================ CBO(0) ================================*
gen cbo_agrup = .
replace cbo_agrup = 0 if inlist(cboocupação2002, ///
010105,010110,010115,010205,010210,010215,010305,010310,010315,020105, ///
020110,020115,020205,020305,020310,021105,021110,021205,021210,030105, ///
030110,030115,030205,030305,031105,031110,031205,031210)
*================================ CBO(1) ================================*
replace cbo_agrup = 1 if inlist(cboocupação2002, ///
111105,111110,111115,111120,111205,111210,111215,111220,111225,111230, ///
111235,111240,111245,111250,111255,111305,111310,111315,111320,111325, ///
111330,111335,111340,111345,111405,111410,111415,111505,111510,113005, ///
113010,113015,114105,114205,114210,114305,114405,121005,121010,122105, ///
122110,122115,122120,122205,122305,122405,122505,122510,122515,122520, ///
122605,122610,122615,122620,122705,122710,122715,122720,122725,122730, ///
122735,122740,122745,122750,122755,123105,123110,123115,123205,123210, ///
123305,123310,123405,123410,123605,123705,123805,131105,131110,131115, ///
131120,131205,131210,131215,131220,131225,131305,131310,131315,131320, ///
141105,141110,141115,141120,141205,141305,141405,141410,141415,141420, ///
141505,141510,141515,141520,141525,141605,141610,141615,141705,141710, ///
141715,141720,141725,141730,141735,141805,141810,141815,141820,141825, ///
141830,142105,142110,142115,142120,142125,142130,142135,142205,142210, ///
142305,142310,142315,142320,142325,142330,142335,142340,142345,142350, ///
142355,142405,142410,142415,142505,142510,142515,142520,142525,142530, ///
142535,142540,142545,142550,142555,142605,142610,142705,142710,142140)
*================================ CBO(2) ================================*
replace cbo_agrup = 2 if inlist(cboocupação2002, ///
201105,201110,201115,201205,201210,201215,201220,201225,202105,202110, ///
202115,202120,203005,203010,203015,203020,203025,203105,203110,203115, ///
203120,203125,203205,203210,203215,203220,203225,203230,203305,203310, ///
203315,203320,203405,203410,203415,203420,203505,203510,203515,203520, ///
203525,204105,204110,211105,211110,211115,211120,211205,211210,211215, ///
212205,212210,212215,212305,212310,212315,212320,212405,212410,212415, ///
212420,212425,212430,213105,213110,213115,213120,213125,213130,213135, ///
213140,213145,213150,213155,213160,213165,213170,213175,213205,213210, ///
213215,213305,213310,213315,213405,213410,213415,213420,213425,213430, ///
213435,213440,214005,214010,214105,214110,214115,214120,214125,214130, ///
214205,214210,214215,214220,214225,214230,214235,214240,214245,214250, ///
214255,214260,214265,214270,214275,214280,214305,214310,214315,214320, ///
214325,214330,214335,214340,214345,214350,214355,214360,214365,214370, ///
214375,214380,214405,214410,214415,214420,214425,214430,214435,214505, ///
214510,214515,214520,214525,214530,214535,214540,214605,214610,214615, ///
214705,214710,214715,214720,214725,214730,214735,214740,214745,214750, ///
214805,214810,214905,214910,214915,214920,214925,214930,214935,214940, ///
214945,215105,215110,215115,215120,215125,215130,215135,215140,215145, ///
215150,215205,215210,215215,215220,215305,215310,215315,221105,221205, ///
222105,222110,222115,222120,222125,222205,222215,223101,223102,223103, ///
223104,223105,223106,223107,223108,223109,223110,223111,223112,223113, ///
223114,223115,223116,223117,223118,223119,223120,223121,223122,223123, ///
223124,223125,223126,223127,223128,223129,223130,223131,223132,223133, ///
223134,223135,223136,223137,223138,223139,223140,223141,223142,223143, ///
223144,223145,223146,223147,223148,223149,223150,223151,223152)
replace cbo_agrup = 2 if inlist(cboocupação2002, ///
223153,223154,223155,223156,223157,223162,223204,223208,223212,223216, ///
223220,223224,223228,223232,223236,223240,223244,223248,223252,223256, ///
223260,223264,223268,223272,223276,223280,223284,223288,223293,223305, ///
223310,223405,223410,223415,223420,223425,223430,223435,223440,223445, ///
223505,223510,223515,223520,223525,223530,223535,223540,223545,223550, ///
223555,223560,223565,223570,223575,223605,223610,223615,223620,223625, ///
223630,223635,223640,223645,223650,223655,223660,223705,223710,223810, ///
223815,223820,223825,223830,223835,223840,223845,223905,223910,223915, ///
224105,224110,224115,224120,224125,224130,224135,224140,225103,225105, ///
225106,225109,225110,225112,225115,225118,225120,225121,225122,225124, ///
225125,225127,225130,225133,225135,225136,225139,225140,225142,225145, ///
225148,225150,225151,225154,225155,225160,225165,225170,225175,225180, ///
225185,225195,225203,225210,225215,225220,225225,225230,225235,225240, ///
225250,225255,225260,225265,225270,225275,225280,225285,225290,225295, ///
225305,225310,225315,225320,225325,225330,225335,225340,225345,225350, ///
225355,226105,226110,226305,226310,226315,226320,231105,231110,231205, ///
231210,231305,231310,231315,231320,231325,231330,231335,231340,232105, ///
232110,232115,232120,232125,232130,232135,232140,232145,232150,232155, ///
232160,232165,232170,233105,233110,233115,233120,233125,233130,233135, ///
233205,233210,233215,233220,233225,234105,234110,234115,234120,234125, ///
234205,234210,234215,234305,234310,234315,234320,234405,234410,234415, ///
234420,234425,234430,234435,234440,234445,234450,234455,234460,234505, ///
234510,234515,234520,234604,234608,234612,234616,234620,234624,234628, ///
234632,234636,234640,234644,234648,234652,234656,234660,234664,234668, ///
234672,234676,234680,234684,234705,234710,234715,234720,234725)
replace cbo_agrup = 2 if inlist(cboocupação2002, ///
234730,234735,234740,234745,234750,234755,234760,234765,234770,234805, ///
234810,234815,234905,234910,234915,239205,239210,239215,239220,239225, ///
239405,239410,239415,239420,239425,239430,239435,239440,239445,241005, ///
241010,241015,241020,241025,241030,241035,241040,241205,241210,241215, ///
241220,241225,241230,241235,241305,241310,241315,241320,241325,241330, ///
241335,241340,241405,242205,242210,242215,242220,242225,242230,242235, ///
242240,242245,242250,242305,242405,242410,242905,242910,251105,251110, ///
251115,251120,251205,251210,251215,251220,251225,251230,251235,251305, ///
251405,251505,251510,251515,251520,251525,251530,251535,251540,251545, ///
251550,251555,251605,251610,252105,252205,252210,252215,252305,252310, ///
252315,252320,252405,252505,252510,252515,252525,252530,252535,252540, ///
252545,252550,252605,252705,252710,252715,252720,252725,253105,253110, ///
253115,253120,253125,253130,253135,253140,253145,253150,253205,253210, ///
253215,253220,253225,253305,253405,253410,254105,254110,254205,254305, ///
254310,254405,254410,254415,254420,254505,261105,261110,261115,261120, ///
261125,261130,261135,261140,261205,261210,261215,261305,261310,261405, ///
261410,261415,261420,261425,261430,261505,261510,261515,261520,261525, ///
261530,261605,261610,261615,261620,261625,261705,261710,261715,261720, ///
261725,261730,261805,261810,261815,261820,261905,261910,262105,262110, ///
262115,262120,262125,262130,262135,262205,262210,262215,262220,262225, ///
262230,262235,262305,262310,262315,262320,262325,262330,262405,262410, ///
262415,262420,262425,262505,262605,262610,262615,262620,262705,262710, ///
262805,262810,262815,262820,262825,262830,262905,263105,263110,263115, ///
271105,271110,211220,223580)
*================================ CBO(3) ================================*
replace cbo_agrup = 3 if inlist(cboocupação2002, ///
300105,300110,300305,301105,301110,301115,301205,311105,311110,311115, ///
311205,311305,311405,311410,311505,311510,311515,311520,311605,311610, ///
311615,311620,311625,311705,311710,311715,311720,311725,312105,312205, ///
312210,312305,312310,312315,312320,313105,313110,313115,313120,313125, ///
313130,313205,313210,313215,313220,313305,313310,313315,313320,313405, ///
313410,313415,313505,314105,314110,314115,314120,314125,314205,314210, ///
314305,314310,314315,314405,314410,314605,314610,314615,314620,314625, ///
314705,314710,314715,314720,314725,314730,314805,314810,314815,314825, ///
314830,314835,314840,314845,316105,316110,316115,316120,316305,316310, ///
316315,316320,316325,316330,316335,316340,317105,317110,317115,317120, ///
317205,317210,318005,318010,318015,318105,318110,318115,318120,318205, ///
318210,318215,318305,318310,318405,318410,318415,318420,318425,318430, ///
318505,318510,318605,318610,318705,318710,318805,318810,318815,319105, ///
319110,319205,320105,320110,321105,321110,321205,321210,321305,321310, ///
321315,321320,322105,322110,322115,322120,322125,322130,322135,322205, ///
322210,322215,322220,322225,322230,322235,322240,322245,322250,322255, ///
322305,322310,322405,322410,322415,322420,322425,322430,322505,322605, ///
323105,324105,324110,324115,324120,324125,324130,324135,324205,324210, ///
324215,324220,325005,325010,325015,325105,325110,325115,325205,325210, ///
325305,325310,328105,328110,331105,331110,331205,331305,332105,332205, ///
333105,333110,333115,334105,334110,334115,341105,341110,341115,341120, ///
341205,341210,341215,341220,341225,341230,341235,341240,341245,341250, ///
341305,341310,341315,341320,341325,342105,342110,342115,342120,342125, ///
342205,342210,342215,342305,342310,342315,342405,342410,342505,342510, ///
342515,342520,342525,342530,342535,342540,342545,342550,342555)
replace cbo_agrup = 3 if inlist(cboocupação2002, ///
342560,342605,342610,351105,351110,351115,351305,351310,351315,351405, ///
351410,351415,351420,351425,351430,351435,351440,351505,351510,351515, ///
351605,351610,351705,351710,351715,351720,351725,351730,351735,351740, ///
351805,351810,351815,351905,351910,352205,352210,352305,352310,352315, ///
352320,352405,352410,352415,352420,353205,353210,353215,353220,353225, ///
353230,353235,354110,354120,354125,354130,354135,354140,354145,354150, ///
354205,354210,354305,354405,354410,354415,354505,354605,354610,354705, ///
354805,354810,354815,354820,354825,371105,371110,371205,371210,371305, ///
371310,371405,371410,372105,372110,372115,372205,372210,373105,373110, ///
373115,373120,373125,373130,373135,373140,373145,373205,373210,373215, ///
373220,373225,373230,374105,374110,374115,374120,374125,374130,374135, ///
374140,374145,374150,374155,374205,374210,374215,374305,374310,374405, ///
374410,374415,374420,374425,375105,375110,375115,375120,375125,375130, ///
376105,376110,376205,376210,376215,376220,376225,376230,376235,376240, ///
376245,376250,376255,376305,376310,376315,376320,376325,376330,376405, ///
376410,376415,377105,377110,377115,377120,377125,377130,377135,377140, ///
377145,377205,377210,377215,377220,377225,377230,377235,377240,377245, ///
391105,391110,391115,391120,391125,391130,391135,391140,391145,391205, ///
391210,391215,391220,391225,391230,395105,395110,322140,324140)
*================================ CBO(4) ================================*
replace cbo_agrup = 4 if inlist(cboocupação2002, ///
410105,410205,410210,410215,410220,410225,410230,410235,410240,411005, ///
411010,411015,411020,411025,411030,411035,411040,411045,411050,411055, ///
412105,412110,412115,412120,412205,413105,413110,413115,413205,413210, ///
413215,413220,413225,413230,414105,414110,414115,414120,414125,414135, ///
414140,414205,414210,414215,415105,415115,415120,415125,415130,415205, ///
415210,415215,415305,415310,420105,420110,420115,420120,420125,420130, ///
420135,421105,421110,421115,421120,421125,421205,421210,421305,421310, ///
421315,422105,422110,422115,422120,422125,422130,422205,422210,422215, ///
422220,422305,422310,422315,422320,422330,422335,423105,423110,424105, ///
424110,424115,424120,424125,424130,424205,424210,423115)
*================================ CBO(5) ================================*
replace cbo_agrup = 5 if inlist(cboocupação2002, ///
510105,510110,510115,510120,510125,510130,510135,510205,510305,510310, ///
511105,511110,511115,511205,511210,511215,511220,511405,511505,511510, ///
512105,512110,512115,512120,513105,513110,513115,513205,513210,513215, ///
513220,513225,513305,513310,513315,513320,513325,513405,513410,513415, ///
513420,513425,513430,513435,513440,513505,513605,513610,513615,514105, ///
514110,514115,514120,514205,514210,514215,514220,514225,514230,514305, ///
514310,514315,514320,514325,514330,515105,515110,515115,515120,515125, ///
515130,515135,515140,515205,515210,515215,515220,515225,515305,515310, ///
515315,515320,515325,515330,516105,516110,516115,516120,516125,516130, ///
516135,516140,516205,516210,516215,516220,516305,516310,516315,516320, ///
516325,516330,516335,516340,516345,516405,516410,516415,516505,516605, ///
516610,516705,516710,516805,516810,517105,517110,517115,517120,517125, ///
517205,517210,517215,517220,517225,517230,517235,517305,517310,517315, ///
517320,517325,517330,517335,517405,517410,517415,517420,517425,519105, ///
519110,519115,519205,519210,519215,519305,519310,519315,519320,519805, ///
519905,519910,519915,519920,519925,519930,519935,519940,519945,520105, ///
520110,521105,521110,521115,521120,521125,521130,521135,521140,523105, ///
523110,523115,523120,523125,524105,524205,524210,524215,524305,524310, ///
524315,511515,516150,516155,516905,517130)
*================================ CBO(6) ================================*
replace cbo_agrup = 6 if inlist(cboocupação2002, ///
611005,612005,612105,612110,612115,612120,612125,612205,612210,612215, ///
612220,612225,612305,612310,612315,612320,612405,612410,612415,612420, ///
612505,612510,612515,612605,612610,612615,612620,612625,612705,612710, ///
612715,612720,612725,612730,612735,612740,612805,612810,613005,613010, ///
613105,613110,613115,613120,613125,613130,613205,613210,613215,613305, ///
613310,613405,613410,613415,613420,620105,620110,620115,621005,622005, ///
622010,622015,622020,622105,622110,622115,622120,622205,622210,622215, ///
622305,622310,622315,622320,622405,622410,622415,622420,622425,622505, ///
622510,622515,622605,622610,622615,622620,622625,622705,622710,622715, ///
622720,622725,622730,622735,622740,622805,622810,623005,623010,623015, ///
623020,623025,623030,623105,623110,623115,623120,623125,623205,623210, ///
623215,623305,623310,623315,623320,623325,623405,623410,623415,623420, ///
630105,630110,631005,631010,631015,631020,631105,631205,631210,631305, ///
631310,631315,631320,631325,631330,631335,631405,631410,631415,631420, ///
632005,632010,632015,632105,632110,632115,632120,632125,632205,632210, ///
632215,632305,632310,632315,632320,632325,632330,632335,632340,632345, ///
632350,632355,632360,632365,632370,632405,632410,632415,632420,632505, ///
632510,632515,632520,632525,632605,632610,632615,641005,641010,641015, ///
642005,642010,642015,643005,643010,643015,643020,643025)
*================================ CBO(7) ================================*
replace cbo_agrup = 7 if inlist(cboocupação2002, ///
710105,710110,710115,710120,710125,710205,710210,710215,710220,710225, ///
711105,711110,711115,711120,711125,711130,711205,711210,711215,711220, ///
711225,711230,711235,711240,711245,711305,711310,711315,711320,711325, ///
711330,711405,711410,712105,712110,712115,712120,712125,712130,712135, ///
712205,712210,712215,712220,712225,712230,715105,715110,715115,715120, ///
715125,715130,715135,715140,715145,715205,715210,715215,715220,715225, ///
715230,715305,715310,715315,715405,715410,715415,715420,715505,715510, ///
715515,715520,715525,715530,715535,715540,715545,715605,715610,715615, ///
715705,715710,715715,715720,715725,715730,716105,716110,716205,716210, ///
716215,716220,716305,716310,716315,716405,716505,716510,716515,716520, ///
716525,716530,716535,716540,716605,716610,716615,717005,717010,717015, ///
717020,717025,720105,720110,720115,720120,720125,720130,720135,720140, ///
720145,720150,720155,720160,720205,720210,720215,720220,721105,721110, ///
721115,721205,721210,721215,721220,721225,721305,721310,721315,721320, ///
721325,721405,721410,721415,721420,721425,721430,722105,722110,722115, ///
722205,722210,722215,722220,722225,722230,722235,722305,722310,722315, ///
722320,722325,722330,722405,722410,722415,723105,723110,723115,723120, ///
723125,723205,723210,723215,723220,723225,723230,723235,723240,723305, ///
723310,723315,723320,723325,723330,724105,724110,724115,724120,724125, ///
724130,724135,724205,724210,724215,724220,724225,724230,724305,724310, ///
724315,724320,724325,724405,724410,724415,724420,724425,724430,724435, ///
724440,724505,724510,724515,724605,724610,725005,725010,725015,725020, ///
725025,725030,725105,725205,725210,725215,725220,725225,725305,725310, ///
725315,725320,725405,725410,725415,725420,725505,725510,725605,725610, ///
725705,730105,731105,731110,731115,731120,731125,731130,731135)
replace cbo_agrup = 7 if inlist(cboocupação2002, ///
731140,731145,731150,731155,731160,731165,731170,731175,731180,731205, ///
731305,731310,731315,731320,731325,731330,732105,732110,732115,732120, ///
732125,732130,732135,732140,740105,740110,741105,741110,741115,741120, ///
741125,742105,742110,742115,742120,742125,742130,742135,742140,750105, ///
750205,751005,751010,751015,751020,751105,751110,751115,751120,751125, ///
751130,752105,752110,752115,752120,752205,752210,752215,752220,752225, ///
752230,752235,752305,752310,752315,752320,752325,752330,752405,752410, ///
752415,752420,752425,752430,760105,760110,760115,760120,760125,760205, ///
760305,760310,760405,760505,760605,761005,761105,761110,761205,761210, ///
761215,761220,761225,761230,761235,761240,761245,761250,761255,761260, ///
761303,761306,761309,761312,761315,761318,761321,761324,761327,761330, ///
761333,761336,761339,761342,761345,761348,761351,761354,761357,761360, ///
761363,761366,761405,761410,761415,761420,761425,761430,761435,761805, ///
761810,761815,761820,762005,762105,762110,762115,762120,762125,762205, ///
762210,762215,762220,762305,762310,762315,762320,762325,762330,762335, ///
762340,762345,763005,763010,763015,763020,763105,763110,763115,763120, ///
763125,763205,763210,763215,763305,763310,763315,763320,763325,764005, ///
764105,764110,764115,764120,764205,764210,764305,765005,765010,765015, ///
765105,765110,765205,765215,765225,765230,765235,765240,765310,765315, ///
765405,766105,766115,766120,766125,766130,766135,766140,766145,766150, ///
766155,766205,766210,766215,766220,766225,766230,766235,766240,766245, ///
766250,766305,766310,766315,766320,766325,766405,766410,766415,766420, ///
768105,768110,768115,768120,768125,768130,768205,768210,768305,768310, ///
768315,768320,768325,768605,768610,768615,768620,768625,768630,768705, ///
768710,770105,770110,771105,771110,771115,771120,772105,772110)
replace cbo_agrup = 7 if inlist(cboocupação2002, ///
772115,773105,773110,773115,773120,773125,773130,773205,773210,773215, ///
773220,773305,773310,773315,773320,773325,773330,773335,773340,773345, ///
773350,773355,773405,773410,773415,773420,773505,773510,774105,775105, ///
775110,775115,775120,776405,776410,776415,776420,776425,776430,777105, ///
777110,777115,777205,777210,780105,781105,781110,781305,781310,781705, ///
782105,782110,782115,782120,782125,782130,782135,782140,782145,782205, ///
782210,782220,782305,782310,782315,782320,782405,782410,782415,782505, ///
782510,782515,782605,782610,782615,782620,782625,782630,782705,782710, ///
782715,782720,782721,782725,782730,782735,782805,782810,782815,782820, ///
783105,783110,783205,783210,783215,783220,783225,783230,783235,783240, ///
784105,784110,784115,784120,784125,784205,791105,791110,791115,791120, ///
791125,791130,791135,791140,791145,791150,791155,791160)
*================================ CBO(8) ================================*
replace cbo_agrup = 8 if inlist(cboocupação2002, ///
810105,810110,810205,810305,811005,811010,811105,811110,811115,811120, ///
811125,811130,811205,811215,811305,811310,811315,811320,811325,811330, ///
811335,811405,811410,811415,811420,811425,811430,811505,811510,811605, ///
811610,811615,811620,811625,811630,811635,811640,811645,811650,811705, ///
811710,811715,811725,811735,811745,811750,811760,811770,811775,811805, ///
811810,811815,811820,812105,812110,813105,813110,813115,813120,813125, ///
813130,818105,818110,820105,820110,820115,820120,820125,820205,820210, ///
821105,821110,821205,821210,821215,821220,821225,821230,821235,821240, ///
821245,821250,821255,821305,821310,821315,821320,821325,821330,821335, ///
821405,821410,821415,821420,821425,821430,821435,821440,821445,821450, ///
822105,822110,822115,822120,822125,823105,823110,823115,823120,823125, ///
823130,823135,823210,823215,823220,823230,823235,823240,823245,823250, ///
823255,823265,823305,823315,823320,823325,823330,828105,828110,830105, ///
831105,831110,831115,831120,831125,832105,832110,832115,832120,832125, ///
832135,833105,833110,833115,833120,833125,833205,840105,840110,840115, ///
840120,841105,841110,841115,841205,841210,841305,841310,841315,841320, ///
841408,841416,841420,841428,841432,841440,841444,841448,841456,841460, ///
841464,841468,841472,841476,841484,841505,841605,841610,841615,841620, ///
841625,841630,841705,841710,841715,841720,841725,841730,841735,841740, ///
841745,841805,841810,841815,842105,842110,842115,842120,842125,842135, ///
842205,842210,842215,842220,842225,842230,842235,842305,848105,848110, ///
848115,848205,848210,848215,848305,848310,848315,848325,848405,848410, ///
848415,848420,848425,848505,848510,848515,848520,848525,848605,860105, ///
860110,860115,861105,861110,861115,861120,861205,862105,862110,862115, ///
862120,862130,862140,862150,862155,862160,862205,862305,862310)
replace cbo_agrup = 8 if inlist(cboocupação2002, ///
862405,862505,862510,862515)
*================================ CBO(9) ================================*
replace cbo_agrup = 9 if inlist(cboocupação2002, ///
910105,910110,910115,910120,910125,910130,910205,910210,910905,910910, ///
911105,911110,911115,911120,911125,911130,911135,911205,911305,911310, ///
911315,911320,911325,913105,913110,913115,913120,914105,914110,914205, ///
914305,914405,914410,914415,914420,914425,915105,915110,915115,915205, ///
915210,915215,915305,915405,919105,919110,919115,919205,919305,919310, ///
919315,950105,950110,950205,950305,951105,951305,951310,951315,951320, ///
953105,953110,953115,954105,954110,954115,954120,954125,954205,954210, ///
954305,991105,991110,991115,991120,991205,991305,991310,991315,991405, ///
991410,991415,991416,991417,992105,992110,992115,992120,992205,992210, ///
992215,992220,992225,913125)
*================================ CBO(?) ================================*
replace cbo_agrup = 10 if inlist(cboocupação2002, ///
999999)
*========================================================================*
label define cbo_agrup_lbl 0 "GG 0", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 1 "GG 1", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 2 "GG 2", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 3 "GG 3", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 4 "GG 4", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 5 "GG 5", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 6 "GG 6", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 7 "GG 7", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 8 "GG 8", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 9 "GG 9", add
label values cbo_agrup cbo_agrup_lbl
label define cbo_agrup_lbl 10 "GG ?", add
label values cbo_agrup cbo_agrup_lbl
drop if cbo_agrup == 10
drop cboocupação2002
* Dropando Forças Armadas, Policiais e Bombeiros Militares
drop if cbo_agrup == 0
* Dropando Membros superiores do poder público, dirigentes de organizações de interesse público e de empresas e gerentes
drop if cbo_agrup == 1
* Dropando Trabalhadores agropecuários, florestais, da caça e pesca
drop if cbo_agrup == 6
egen cbo_agrupado = group(cbo_agrup)
*========================================================================*

/*************************************************************************
* (3) Estados
*************************************************************************/
*============================== Estado(RS) ==============================*
gen estado = .
replace estado = 0 if inlist(município, ///
430003,430005,430010,430020,430030,430040,430045,430047,430050,430055, ///
430057,430060,430063,430064,430066,430070,430080,430085,430087,430090, ///
430100,430105,430107,430110,430120,430130,430140,430150,430155,430160, ///
430163,430165,430170,430175,430180,430185,430187,430190,430192,430195, ///
430200,430205,430210,430215,430220,430222,430223,430225,430230,430235, ///
430237,430240,430245,430250,430258,430260,430265,430270,430280,430290, ///
430300,430310,430320,430330,430340,430350,430355,430360,430367,430370, ///
430380,430390,430400,430410,430420,430430,430435,430440,430450,430460, ///
430461,430462,430463,430465,430466,430467,430468,430469,430470,430471, ///
430480,430485,430490,430495,430500,430510,430511,430512,430513,430515, ///
430517,430520,430530,430535,430537,430540,430543,430544,430545,430550, ///
430558,430560,430570,430580,430583,430585,430587,430590,430593,430595, ///
430597,430600,430605,430607,430610,430613,430620,430630,430632,430635, ///
430637,430640,430642,430645,430650,430655,430660,430670,430673,430675, ///
430676,430680,430690,430692,430693,430695,430697,430700,430705,430710, ///
430720,430730,430740,430745,430750,430755,430760,430770,430780,430781, ///
430783,430786,430790,430800,430805,430807,430810,430820,430825,430830, ///
430840,430843,430845,430850,430860,430865,430870,430880,430885,430890, ///
430900,430905,430910,430912,430915,430920,430925,430930,430940,430950, ///
430955,430957,430960,430965,430970,430975,430980,430990,430995,431000, ///
431010,431020,431030,431033,431036,431040,431041,431043,431046,431050, ///
431053,431055,431057,431060,431065,431070,431075,431080,431085,431087, ///
431090,431100,431110,431112,431113,431115,431120,431123,431125,431127, ///
431130,431140,431142,431150,431160,431162,431164,431170,431171,431173, ///
431175,431177,431179,431180,431190,431198,431200,431205,431210)
replace estado = 0 if inlist(município, ///
431213,431215,431217,431220,431225,431230,431235,431237,431238,431240, ///
431242,431244,431245,431247,431250,431260,431261,431262,431265,431267, ///
431270,431275,431280,431290,431295,431300,431301,431303,431306,431308, ///
431310,431320,431330,431333,431335,431337,431339,431340,431342,431344, ///
431346,431349,431350,431360,431365,431370,431380,431390,431395,431400, ///
431402,431403,431405,431406,431407,431410,431413,431415,431417,431420, ///
431430,431440,431442,431445,431446,431447,431449,431450,431453,431454, ///
431455,431460,431470,431475,431477,431478,431480,431490,431500,431505, ///
431507,431510,431513,431514,431515,431517,431520,431530,431531,431532, ///
431535,431540,431545,431550,431555,431560,431570,431575,431580,431590, ///
431595,431600,431610,431620,431630,431640,431642,431643,431645,431647, ///
431650,431660,431670,431673,431675,431680,431690,431695,431697,431700, ///
431710,431720,431725,431730,431740,431750,431755,431760,431770,431775, ///
431780,431790,431795,431800,431805,431810,431820,431830,431840,431842, ///
431843,431844,431845,431846,431848,431849,431850,431860,431861,431862, ///
431870,431880,431890,431900,431910,431912,431915,431920,431930,431935, ///
431936,431937,431940,431950,431960,431970,431971,431973,431975,431980, ///
431990,432000,432010,432020,432023,432026,432030,432032,432035,432040, ///
432045,432050,432055,432057,432060,432065,432067,432070,432080,432085, ///
432090,432100,432110,432120,432130,432132,432135,432140,432143,432145, ///
432146,432147,432149,432150,432160,432162,432163,432166,432170,432180, ///
432183,432185,432190,432195,432200,432210,432215,432218,432220,432225, ///
432230,432232,432234,432235,432237,432240,432250,432252,432253,432254, ///
432255,432260,432270,432280,432285,432290,432300,432310,432320,432330, ///
432335,432340,432345,432350,432360,432370,432375,432377,432380)
replace estado = 0 if inlist(município, ///
439999)
*============================== Estado(SC) ==============================*
replace estado = 1 if inlist(município, ///
420005,420010,420020,420030,420040,420050,420055,420060,420070,420075, ///
420080,420090,420100,420110,420120,420125,420127,420130,420140,420150, ///
420160,420165,420170,420180,420190,420195,420200,420205,420207,420208, ///
420209,420210,420213,420215,420220,420230,420240,420243,420245,420250, ///
420253,420257,420260,420270,420280,420285,420287,420290,420300,420310, ///
420315,420320,420325,420330,420340,420350,420360,420370,420380,420390, ///
420395,420400,420410,420415,420417,420419,420420,420425,420430,420435, ///
420440,420445,420450,420455,420460,420470,420475,420480,420490,420500, ///
420510,420515,420517,420519,420520,420530,420535,420540,420543,420545, ///
420550,420555,420560,420570,420580,420590,420600,420610,420620,420630, ///
420640,420650,420660,420665,420670,420675,420680,420690,420700,420710, ///
420720,420730,420740,420750,420757,420760,420765,420768,420770,420775, ///
420780,420785,420790,420800,420810,420820,420830,420840,420845,420850, ///
420860,420870,420880,420890,420895,420900,420910,420915,420917,420920, ///
420930,420940,420945,420950,420960,420970,420980,420985,420990,421000, ///
421003,421005,421010,421020,421030,421040,421050,421055,421060,421070, ///
421080,421085,421090,421100,421105,421110,421120,421125,421130,421140, ///
421145,421150,421160,421165,421170,421175,421180,421185,421187,421189, ///
421190,421200,421205,421210,421220,421223,421225,421227,421230,421240, ///
421250,421260,421265,421270,421280,421290,421300,421310,421315,421320, ///
421330,421335,421340,421350,421360,421370,421380,421390,421400,421410, ///
421415,421420,421430,421440,421450,421460,421470,421480,421490,421500, ///
421505,421507,421510,421520,421530,421535,421540,421545,421550,421555, ///
421560,421565,421567,421568,421569,421570,421575,421580,421590,421600, ///
421605,421610,421620,421625,421630,421635,421640,421650,421660)
replace estado = 1 if inlist(município, ///
421670,421680,421690,421700,421710,421715,421720,421725,421730,421740, ///
421750,421755,421760,421770,421775,421780,421790,421795,421800,421810, ///
421820,421825,421830,421835,421840,421850,421860,421870,421875,421880, ///
421885,421890,421895,421900,421910,421915,421917,421920,421930,421935, ///
421940,421950,421960,421970,421985,422000,429999)
*============================== Estado(PR) ==============================*
replace estado = 2 if inlist(município, ///
410010,410020,410030,410040,410045,410050,410060,410070,410080,410090, ///
410100,410105,410110,410115,410120,410130,410140,410150,410160,410165, ///
410170,410180,410185,410190,410200,410210,410220,410230,410240,410250, ///
410260,410270,410275,410280,410290,410300,410302,410304,410305,410310, ///
410315,410320,410322,410330,410335,410337,410340,410345,410347,410350, ///
410360,410370,410380,410390,410395,410400,410405,410410,410420,410425, ///
410430,410440,410442,410445,410450,410460,410465,410470,410480,410490, ///
410500,410510,410520,410530,410540,410550,410560,410570,410580,410590, ///
410600,410610,410620,410630,410640,410645,410650,410655,410657,410660, ///
410670,410680,410685,410690,410700,410710,410712,410715,410720,410725, ///
410730,410740,410750,410752,410753,410754,410755,410760,410765,410770, ///
410773,410775,410780,410785,410790,410800,410810,410820,410830,410832, ///
410840,410845,410850,410855,410860,410865,410870,410880,410890,410895, ///
410900,410910,410920,410930,410940,410950,410960,410965,410970,410975, ///
410980,410990,411000,411005,411007,411010,411020,411030,411040,411050, ///
411060,411065,411070,411080,411090,411095,411100,411110,411120,411125, ///
411130,411140,411150,411155,411160,411170,411180,411190,411200,411210, ///
411220,411230,411240,411250,411260,411270,411275,411280,411290,411295, ///
411300,411310,411320,411325,411330,411340,411342,411345,411350,411360, ///
411370,411373,411375,411380,411390,411400,411410,411420,411430,411435, ///
411440,411450,411460,411470,411480,411490,411500,411510,411520,411530, ///
411535,411540,411545,411550,411560,411570,411573,411575,411580,411585, ///
411590,411600,411605,411610,411620,411630,411640,411650,411660,411670, ///
411680,411690,411695,411700,411705,411710,411720,411721,411722,411725, ///
411727,411729,411730,411740,411745,411750,411760,411770,411780)
replace estado = 2 if inlist(município, ///
411790,411800,411810,411820,411830,411840,411845,411850,411860,411870, ///
411880,411885,411890,411900,411910,411915,411920,411925,411930,411940, ///
411950,411960,411965,411970,411980,411990,411995,412000,412010,412015, ///
412020,412030,412033,412035,412040,412050,412060,412065,412070,412080, ///
412085,412090,412100,412110,412120,412125,412130,412135,412140,412150, ///
412160,412170,412175,412180,412190,412200,412210,412215,412217,412220, ///
412230,412240,412250,412260,412265,412270,412280,412290,412300,412310, ///
412320,412330,412340,412350,412360,412370,412380,412382,412385,412390, ///
412395,412400,412402,412405,412410,412420,412430,412440,412450,412460, ///
412470,412480,412490,412500,412510,412520,412530,412535,412540,412545, ///
412550,412555,412560,412570,412575,412580,412590,412600,412610,412620, ///
412625,412627,412630,412635,412640,412650,412660,412665,412667,412670, ///
412680,412690,412700,412710,412720,412730,412740,412750,412760,412770, ///
412780,412785,412788,412790,412795,412796,412800,412810,412820,412830, ///
412840,412850,412853,412855,412860,412862,412863,412865,412870,412880, ///
419999)
*========================================================================*
label define estado_lbl 0 "RS"
label values estado estado_lbl
label define estado_lbl 1 "SC", add
label values estado estado_lbl
label define estado_lbl 2 "PR", add
label values estado estado_lbl
*drop if estado == 1
*drop if estado == 2
*========================================================================*

* Tirando trabalhador intermitente                                             *
drop if indtrabintermitente == 1
drop indtrabintermitente
* Tirando trabalho parcial *
drop if indtrabparcial == 1
drop indtrabparcial

* Tirando categoria Cadastro Específico do INSS, que virou CNO, eu acho        *
*drop if indceivinculado == 9
*drop indceivinculado

* Dropei quem tinha deficiência, deixando apenas quem não tinha (zero) e quem  *
* foi reabilitado (seis), para tentar deixar mais homogênea as capacidades de  *
* cada indivíduo. Deletei o indicador de portador de deficiência junto         *
drop if inrange(tipodefic, 1, 5)
drop tipodefic
drop if indportadordefic == 1
drop indportadordefic

* Deixando só Trabalhador urbano (10) e rural (20) vinculado a empregador      *
* pessoa jurídica por contrato de trabalho regido pela CLT, por prazo          *
* indeterminado                                                                *
keep if inlist(tipovínculo, 10, 20) 
label define tipovínculo 10 "Urbano" 20 "Rural"
label values tipovínculo tipovínculo
label variable tipovínculo "Vínculo"
drop if tipovínculo == 20

* Tirando admissões específicas de servidor                                    *
keep if inlist(tipoadmissão, 0, 1, 2, 3, 4, 8)
drop tipoadmissão

gen nac = 0 if nacionalidade == "10"
replace nac = 1 if nacionalidade != "10"
label define nac 0 "Brasileiro" 1 "Estrangeiro"
label values nac nac
drop nacionalidade
rename nac nacionalidade
label variable nacionalidade "Nacionalidade"
*drop if nacionalidade == 1

* Excluindo falecidos, aposentados e demissões por justa causa, também         *
* rescisão indireta. Excluí transferências de funcionários porque poderia      *
* contar como demissão, sendo que ela de fato não ocorreu (30, 31)             *
drop if inlist(motivodesligamento, 10,20,30,31,40,60,62,63,64,70,71,72,73,   ///
74,75,76,77,78,79,80,89) 
*drop motivodesligamento

* Mantenho só quem trabalha pra CNPJ, excluindo CNO e CAEPF. Quem trabalha por *
* CNO pode sofrer sazonalidade, ou até serviços não rotineiros, sei lá. Então  *
* ele mantém um emprego por um período fixo de tempo, já                       *
* tipoestab = v43                                                              *
keep if tipoestab == 1 
drop tipoestab
drop v43

gen afastamento = .
replace afastamento = 0 if causaafastamento1 == 99                           ///
                         & causaafastamento2 == 99                           ///
                         & causaafastamento3 == 99
replace afastamento = 1 if afastamento == .                                  ///
                         & (causaafastamento1 == 50                          ///
                         | causaafastamento2 == 50                           ///
                         | causaafastamento3 == 50 )
replace afastamento = 2 if afastamento == .                                  ///
                         & (inlist(causaafastamento1,10,20)                  ///
                         | inlist(causaafastamento2,10,20)                   ///
                         | inlist(causaafastamento3,10,20) )
replace afastamento = 3 if afastamento == .                                  ///
                         & (inlist(causaafastamento1,30,40)                  ///
                         | inlist(causaafastamento2,30,40)                   ///
                         | inlist(causaafastamento3,30,40) )
replace afastamento = 4 if afastamento == .
                        label define afalbl 0 "Nenhum (99)"                  ///
                        1 "Licença-maternidade"                              ///
                        2 "Acidente"                                         ///
                        3 "Doença"                                           ///
                        4 "Outros"
label values afastamento afalbl
drop causaafastamento1 causaafastamento2 causaafastamento3
label variable afastamento "Afastamento"
drop if afastamento == 1 & qtddiasafastamento > 120
drop if afastamento == 2 & qtddiasafastamento > 180
drop if afastamento == 3 & qtddiasafastamento > 180
drop if afastamento == 4
*drop if inlist(afastamento,1,2,3,4)
*https://www.planalto.gov.br/ccivil_03/decreto-lei/del5452.htm
*Licença maternidade = 120 dias
*https://legisjet.com.br/uncategorized/atestmed-analise-documental-auxilio-por-incapacidade-temporaria/
*https://www.in.gov.br/en/web/dou/-/portaria-conjunta-mps/inss-n-38-de-20-de-julho-de-2023-497859087
*Atestmed (Incapacidade) = 180 dias

label define sexotrabalhador 1 "Masculino" 2 "Feminino"
label values sexotrabalhador sexotrabalhador
label variable sexotrabalhador "Sexo"

* Tamanho por número de empregados                                             *
label define tamanhoestabelecimento 1 "Zero" 2 "De 1 a 4" 3 "De 5 a 9"       ///
                                    4 "De 10 a 19" 5 "De 20 a 49"            ///
									6 "De 50 a 99" 7 "De 100 a 249"          ///
									8 "De 250 a 499" 9 "De 500 a 999"        ///
									10 "1000 ou Mais"
label values tamanhoestabelecimento tamanhoestabelecimento
gen porte = .
replace porte = 1 if inlist(tamanhoestabelecimento,1,2,3) ///
				   & inlist(cnae_agrup,0,6,7,8,9,10,11,12,13,14,15,16,17,18, ///
				   19,20)
replace porte = 2 if inlist(tamanhoestabelecimento,4,5) ///
				   & inlist(cnae_agrup,0,6,7,8,9,10,11,12,13,14,15,16,17,18, ///
				   19,20)
replace porte = 3 if inlist(tamanhoestabelecimento,6) ///
				   & inlist(cnae_agrup,0,6,7,8,9,10,11,12,13,14,15,16,17,18, ///
				   19,20)
replace porte = 4 if inlist(tamanhoestabelecimento,7,8,9,10) ///
				   & inlist(cnae_agrup,0,6,7,8,9,10,11,12,13,14,15,16,17,18, ///
				   19,20)
replace porte = 1 if inlist(tamanhoestabelecimento,1,2,3,4) ///
				   & inlist(cnae_agrup,1,2,3,4,5)
replace porte = 2 if inlist(tamanhoestabelecimento,5,6) ///
				   & inlist(cnae_agrup,1,2,3,4,5)
replace porte = 3 if inlist(tamanhoestabelecimento,7,8) ///
				   & inlist(cnae_agrup,1,2,3,4,5)
replace porte = 4 if inlist(tamanhoestabelecimento,9,10) ///
				   & inlist(cnae_agrup,1,2,3,4,5)
label define portelbl 1 "Micro" 2 "Pequeno" 3 "Médio" 4 "Grande"
label values porte portelbl
label variable porte "Porte do estabelecimento"

label define raçacor 1 "Indígena" 2 "Branca" 4 "Preta" 6 "Amarela" 8 "Parda" ///
                     9 "Não informado"
label values raçacor raçacor
recode raçacor (2=99)
recode raçacor (1=2)
recode raçacor (99=1)
label define raçacor 1 "Branca" 2 "Indígena" 4 "Preta" 6 "Amarela" 8 "Parda" ///
                     9 "Não informado", modify
label values raçacor raçacor
drop if raçacor == 9
label variable raçacor "Raça"
gen raça = .
replace raça = 0 if inlist(raçacor,1)
replace raça = 1 if inlist(raçacor,2,4,6,8)
label define raçalbl 0 "Branco" 1 "Não branco"
label values raça raçalbl

* Tirando administração pública                                                *
drop if inlist(naturezajurídica,1015,1023,1031,1058,1066,1082,1104,1112,     ///
        1120,1147,1155,1210,1228,1236,1244,1260,1279,1325,1333)
* Retirando Empresário (Individual)                                            *
drop if inlist(naturezajurídica,2135)
* Tirando empresa pública e SEM, já que faz parte da ADM Pública Indireta      *
drop if inlist(naturezajurídica,2011,2038)
* Tirando Pessoas Físicas                                                      *
drop if inlist(naturezajurídica,4014,4022,4081,4090,4111,4120)
gen natureza = .
replace natureza = 1 if inlist(naturezajurídica, ///
1015,1023,1031,1040,1058,1066,1074,1082,1104,1112,1120,1139,1147,1155,1163,  ///
1171,1180,1198,1210,1228,1236,1244,1252,1260,1279,1287,1295,1309,1317,1325,  ///
1333,1341)
replace natureza = 2 if inlist(naturezajurídica, ///
2011,2038,2046,2054,2062,2070,2089,2097,2127,2135,2143,2151,2160,2178,2194,  ///
2216,2224,2232,2240,2259,2267,2275,2283,2291,2305,2313,2321,2330,2348,2356)
replace natureza = 3 if inlist(naturezajurídica, ///
3034,3069,3077,3085,3107,3115,3131,3204,3212,3220,3239,3247,3255,3263,3271,  ///
3280,3298,3301,3310,3328,3999)
replace natureza = 4 if inlist(naturezajurídica, ///
4014,4022,4081,4090,4111,4120)
replace natureza = 5 if inlist(naturezajurídica, ///
5010, 5029, 5037)
label define natureza_lbl ///
1 "Administração Pública" ///
2 "Entidades Empresariais" ///
3 "Entidades sem Fins Lucrativos" ///
4 "Pessoas Físicas" ///
5 "Instituições Extraterritoriais"
label values natureza natureza_lbl
keep if natureza == 2

gen esc9 = .
replace esc9 = 1 if inlist(escolaridadeapós2005,1)
replace esc9 = 2 if inlist(escolaridadeapós2005,2,3,4)
replace esc9 = 3 if inlist(escolaridadeapós2005,5)
replace esc9 = 4 if inlist(escolaridadeapós2005,6)
replace esc9 = 5 if inlist(escolaridadeapós2005,7)
replace esc9 = 6 if inlist(escolaridadeapós2005,8)
replace esc9 = 7 if inlist(escolaridadeapós2005,9)
replace esc9 = 8 if inlist(escolaridadeapós2005,10)
replace esc9 = 9 if inlist(escolaridadeapós2005,11)
label define esc9lbl ///
1 "Analfabeto" ///
2 "Ensino Fundamental Incompleto" ///
3 "Ensino Fundamental Completo" ///
4 "Ensino Médio Incompleto" ///
5 "Ensino Médio Completo" ///
6 "Ensino Superior Incompleto" ///
7 "Ensino Superior Completo" ///
8 "Mestrado" ///
9 "Doutorado"
label values esc9 esc9lbl
gen escolaridade = .
replace escolaridade = 1 if inlist(esc9,3)
replace escolaridade = 2 if inlist(esc9,5)
replace escolaridade = 3 if inlist(esc9,7)
replace escolaridade = 4 if inlist(esc9,8)
replace escolaridade = 5 if inlist(esc9,9)
label define escolaridadelbl ///
1 "Ensino Fundamental Completo" ///
2 "Ensino Médio Completo" ///
3 "Ensino Superior Completo" ///
4 "Mestrado" ///
5 "Doutorado"
label values escolaridade escolaridadelbl
label variable escolaridade "Escolaridade"
drop escolaridadeapós2005
*Mantendo só titulações, para analisar efeito diploma
keep if inlist(esc9,3,5,7,8,9)

* Mantendo só o pessoal que trabalha nessas horas aí, 6 horas por dia ou 8 por *
* dia, até sexta ou sábado (+4 anso sábado para 8 horas)                       *
keep if inlist(qtdhoracontr,44,40,36,30)
gen horas = .
replace horas = 0 if inlist(qtdhoracontr,40,44)
replace horas = 1 if inlist(qtdhoracontr,30,36)
label define horas_lbl 0 "8 horas" 1 "6 horas"
label values horas horas_lbl
*drop if horas == 1
*keep if inlist(qtdhoracontr,40,44)
*keep if inlist(qtdhoracontr,44)

clonevar tempoemprego_clean = tempoemprego
replace tempoemprego_clean = subinstr(tempoemprego_clean, ",", ".", .)
destring tempoemprego_clean, replace force
drop tempoemprego
gen tempo_ordinal = .
replace tempo_ordinal = 0 if tempoemprego_clean < 12
replace tempo_ordinal = 1 if tempoemprego_clean >= 12 & tempoemprego_clean < 60
replace tempo_ordinal = 2 if tempoemprego_clean >= 60
label define tempo_ordinal_lbl 0 "Até 1 ano" 1 "1 a 5 anos" 2 "Mais de 5 anos", modify
label values tempo_ordinal tempo_ordinal_lbl
* 60 = 5 anos; 36 = 3 anos; 48 = 4 anos; 84 = 7 anos; 96 = 8 anos; 144 = 12 anos

clonevar vlremunmédianom_clean = vlremunmédianom
replace vlremunmédianom_clean = subinstr(vlremunmédianom_clean, ",", ".", .)
replace vlremunmédianom_clean = regexr(vlremunmédianom_clean, "^0+", "")
destring vlremunmédianom_clean, replace force
drop vlremunmédianom
* Dropando um caso extremo                                                     *
* drop if vlremunmédianom_clean == 0
clonevar vlremunmédiasm_clean = vlremunmédiasm
replace vlremunmédiasm_clean = subinstr(vlremunmédiasm_clean, ",", ".", .)
replace vlremunmédiasm_clean = regexr(vlremunmédiasm_clean, "^0+", "")
destring vlremunmédiasm_clean, replace force
drop vlremunmédiasm
* Dropando um caso extremo                                                     *
* drop if inrange(vlremunmédiasm_clean,0,0.99)
gen faixa_salario = .
replace faixa_salario = 1 if vlremunmédianom_clean <= 2214 & vlremunmédianom_clean != .
replace faixa_salario = 2 if vlremunmédianom_clean > 2214 & vlremunmédianom_clean <= 3538
replace faixa_salario = 3 if vlremunmédianom_clean > 3538 & vlremunmédianom_clean <= 15254
replace faixa_salario = 4 if vlremunmédianom_clean > 15254 & vlremunmédianom_clean <= 19882
replace faixa_salario = 5 if vlremunmédianom_clean > 19882
label define faixa_sal_lbl ///
1  "Até R$2.214" ///
2  "R$2.214 a R$3.538" ///
3  "R$3.538 a R$15.254" ///
4  "R$15.254 a R$19.882" ///
5  "Acima de R$19.882"
label values faixa_salario faixa_sal_lbl
*desconsiderar classe A e B
*drop if faixa_salario == 4
*drop if faixa_salario == 5
